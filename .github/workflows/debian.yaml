name: Build Debian Package

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install build dependencies
        run: sudo apt-get install -y devscripts debhelper python3-venv python3-pip

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Build the package
        run: |
          chmod +x debian/rules
          dpkg-buildpackage -us -uc

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: 'v1.0.0'  # Set your versioning scheme
          release_name: '${{ github.event.repository.name }} - Version 1.0.0'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Debian Package
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ../*.deb  # Adjust to the actual output location
          asset_name: music_downloader.deb  # Specify a proper name for your asset
          asset_content_type: application/vnd.debian.binary
